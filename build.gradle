plugins {
    id 'java'
    id 'java-library'
    id 'jacoco'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'signing'
    id("io.github.gradle-nexus.publish-plugin").version("1.0.0")
}

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

javadoc {
    destinationDir = new File(rootProject.projectDir, "docs/javadoc/.")
}

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
    testImplementation 'org.mockito:mockito-core:4.9.0'
    implementation files("libs/RobotCore.jar")
    implementation 'org.jetbrains:annotations:23.1.0'
    //implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    //implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
}

String versionstr
String releasever

if (System.getenv('VERSION')) {
    versionstr = System.getenv('VERSION')
    releasever = versionstr.substring(versionstr.indexOf('v') + 1)
} else {
    releasever = ''
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                groupId = "com.ftc11392.sequoia"
                artifactId = "sequoia"
                version = releasever
                packaging = "jar"

                from components.java

                name = "Sequoia"
                description = "A First Tech Challenge library for subsystem management and command-" +
                        "based programming built on top of the FTC SDK."
                url = "https://github.com/HighOakRobotics/Sequoia"

                licenses {
                    license {
                        name = "BSD-3"
                        url = "https://opensource.org/licenses/BSD-3-Clause"
                    }
                }

                developers {
                    developer {
                        name = "Raymond Zhao"
                        email = "stinggyray@gmail.com"
                        organization = "High Oak Robotics"
                        organizationUrl = "https://github.com/HighOakRobotics"
                    }
                    developer {
                        name = "Brian Lu"
                        email = "lu_haoqin@outlook.com"
                        organization = "High Oak Robotics"
                        organizationUrl = "https://github.com/HighOakRobotics"
                    }
                }

                scm {
                    connection = 'scm:git:git@github.com:HighOakRobotics/Sequoia.git'
                    developerConnection = 'scm:git:git@github.com:HighOakRobotics/Sequoia.git'
                    url = 'https://github.com/HighOakRobotics/Sequoia'
                }
            }

        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv("OSSRH_USERNAME")
            password = System.getenv("OSSRH_TOKEN")

            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")

            stagingProfileId = "90636597e2d0f"
        }
    }
}

signing {
    def signingKey = System.getenv("SIGNING_KEY")
    def signingPassword = System.getenv("SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        //html.destination file("${buildDir}/jacocoHtml")
    }
}
